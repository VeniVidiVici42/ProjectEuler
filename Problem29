/* 

Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:

22=4, 23=8, 24=16, 25=32
32=9, 33=27, 34=81, 35=243
42=16, 43=64, 44=256, 45=1024
52=25, 53=125, 54=625, 55=3125
If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?

*/


#include <bits/stdc++.h>
using namespace std;

bool rep[101][601]; //counts if i^j is represented where i is not a perfect power; max j is 6*100=600

bool isint(double n){
  //checks if a double is actually an integer, accounting for floating point error
  return (n-(int)(n)<0.001 || n-(int)(n)>0.999);
}

void decomp(int i,int j){
  //decomposes i^j into the smallest possible base
  
  for(int b=2; b<=i; b++){
  	if(isint(log(i)/log(b))){
  	  //log_b(i) is an integer
  	  rep[b][j*(int)(log(i)/log(b)+0.001)]=true;
  	  return;
  	}
  }
  
}

int main() {
	
  for(int i=2; i<=100; i++){
    for(int j=2; j<=100; j++){
      decomp(i,j);
    }
  }
  
  int ans=0;
  
  for(int i=0; i<=100; i++){
    for(int j=0; j<=600; j++){
      //count all the "minimal forms"
      ans+=rep[i][j];
    }
  }
  
  cout << ans << endl;
}
